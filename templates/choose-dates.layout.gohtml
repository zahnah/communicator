{{define "choose-dates"}}
    <div class="container">

        <div class="row">
            <div class="col">
                <h1 class="h3">Search availability</h1>
                <form id="availability-form" action="/search-availability" method="post">
                    <input type="hidden" name="csrf_token" value="{{.CSRFToken}}">
                    <input type="hidden" name="room_id" value="{{.IntMap.room_id}}">
                    <div class="row">
                        <div class="col col-md-6">
                            <div class="mb-3">
                                <label for="startDate" class="form-label">Starting date</label>
                                <input name="start" required type="date" class="form-control" id="startDate"
                                       aria-describedby="emailHelp">
                                <div id="startDateHelp" class="form-text">Start date</div>
                            </div>
                        </div>
                        <div class="col col-md-6">
                            <div class="mb-3">
                                <label for="andDate" class="form-label">Ending date</label>
                                <input name="end" required type="date" class="form-control" id="andDate"
                                       aria-describedby="emailHelp">
                                <div id="endDateHelp" class="form-text">End date</div>
                            </div>
                        </div>
                    </div>

                    <div class="mb-3">
                        <button type="submit" class="btn btn-primary">Search availability</button>
                    </div>

                </form>
            </div>
        </div>

        <!-- /END THE FEATURETTES -->

    </div><!-- /.container -->
{{end}}

{{block "js" .}}
    <script type="text/javascript">
        console.log("HERE");
        const form = document.getElementById("availability-form");
        form.onsubmit = (ev) => {
            ev.preventDefault();
            const data = new FormData(ev.target);
            const url = "/search-availability-json";

            fetch(url, {
                method: "POST",
                body: data,
            })
                .then((response) => {
                    if (!response.ok) {
                        throw new Error("Network response was not ok");
                    }
                    return response.json();
                })
                .then((data) => {
                    console.log(data);
                    if(confirm(data.message)) {
                        location.href = '/book-room?id=' + data.room_id
                            + '&start_date=' + data.start_date
                            + '&end_date=' + data.end_date
                    }
                    // do something with response data
                })
                .catch((error) => {
                    console.error("There was a problem with the fetch operation:", error);
                });

        }
    </script>
{{end}}